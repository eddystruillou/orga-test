name: Create Tag and Release

on:
  pull_request:
    branches: [main]
    types: [closed]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # Vérification de la modification du fichier package.json
    - name: Check if package.json was modified
      uses: actions/github-script@v6
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        script: |
          const pullRequest = context.payload.pull_request;
          const files = await context.github.pulls.listFiles({
            owner: pullRequest.base.repo.owner.login,
            repo: pullRequest.base.repo.name,
            pull_number: pullRequest.number
          });
          if (!files.data.some(f => f.filename === 'package.json')) {
            console.log('package.json was not modified in this pull request, skipping workflow');
            process.exit(1);
          }
    # Checkout
    - name: Checkout
      uses: actions/checkout@v3
    # Installation des dependencies
    - name: Install dependencies
      run: npm install
    # Récupération du numéro de version dans le package.json
    # Création du tag
    # Push du tag
    - name: Create and push tag
      run: |
        TAG_NAME=v$(node -p "require('./package.json').version")
        git tag $TAG_NAME
        git push origin $TAG_NAME
    # Récupération du nom du tag git créé à l'étape au dessus
    - name: Get tag name
      id: tag-name
      run: |
        export TAG=$(git describe --tags --abbrev=0)
        echo "::set-output name=TAG::$TAG"
    # Création d'une Release Github
    - name: Publish Github Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag-name.outputs.TAG }} # On récupère le tag extrait au step précédent.
